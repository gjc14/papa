import { useEffect } from 'react'
import { Form, useFetcher } from 'react-router'

import { Loader2 } from 'lucide-react'

import { Button } from '~/components/ui/button'
import {
	Dialog,
	DialogContent,
	DialogDescription,
	DialogFooter,
	DialogHeader,
	DialogTitle,
} from '~/components/ui/dialog'
import { Input } from '~/components/ui/input'
import { Label } from '~/components/ui/label'
import { Textarea } from '~/components/ui/textarea'
import { isActionSuccess } from '~/lib/utils'
import { type SeoLoaderType } from '~/routes/papa/dashboard/seo'

export const SeoContent = ({
	seo,
	open,
	setOpen,
	action,
	method,
}: {
	seo?: SeoLoaderType
	open: boolean
	setOpen: React.Dispatch<React.SetStateAction<boolean>>
	action: string
	method: 'PUT' | 'POST'
}) => {
	const fetcher = useFetcher()
	const isSubmitting =
		fetcher.formAction === action && fetcher.state === 'submitting'

	useEffect(() => {
		if (fetcher.state === 'loading' && isActionSuccess(fetcher.data)) {
			setOpen(false)
		}
	}, [fetcher])

	return (
		<Dialog open={open} onOpenChange={setOpen}>
			<DialogContent className="max-h-[90vh] overflow-scroll sm:max-w-[425px]">
				<DialogHeader>
					<DialogTitle>{seo ? 'Edit' : 'Create'} seo</DialogTitle>
					<DialogDescription>
						{seo ? 'Make changes of' : 'Create'} your route or post seo here.
						You could edit in route or post as well.{' '}
						{seo &&
							`Last updated on ${new Date(seo.updatedAt).toLocaleString(
								'zh-TW',
							)}`}
					</DialogDescription>
				</DialogHeader>
				<Form
					id="seo-content"
					className="grid gap-4 py-4"
					onSubmit={e => {
						e.preventDefault()
						fetcher.submit(new FormData(e.currentTarget), {
							method,
							action,
						})
					}}
				>
					<input type="hidden" name="id" defaultValue={seo?.id} />

					{(!seo || !seo.autoGenerated) && (
						<div className="grid grid-cols-4 items-center gap-4">
							<Label htmlFor="route" className="text-right">
								Route
							</Label>
							<Input
								id="route"
								name="route"
								defaultValue={seo?.route ?? undefined}
								className="col-span-3"
								placeholder="What's your route?"
							/>
						</div>
					)}
					<div className="grid grid-cols-4 items-center gap-4">
						<Label htmlFor="metaTitle" className="text-right">
							Title
						</Label>
						<Input
							id="metaTitle"
							name="metaTitle"
							defaultValue={seo?.metaTitle ?? undefined}
							className="col-span-3"
							placeholder="What's your title?"
						/>
					</div>
					<div className="grid grid-cols-4 items-center gap-4">
						<Label htmlFor="metaDescription" className="text-right">
							Description
						</Label>
						<Textarea
							id="metaDescription"
							name="metaDescription"
							defaultValue={seo?.metaDescription ?? undefined}
							rows={5}
							className="col-span-3"
							placeholder="Sentense that catch pedestrians' eye ball..."
						/>
					</div>
					<div className="grid grid-cols-4 items-center gap-4">
						<Label htmlFor="keywords" className="text-right">
							Keywords
						</Label>
						<Textarea
							id="keywords"
							name="keywords"
							defaultValue={seo?.keywords ?? undefined}
							rows={2}
							className="col-span-3"
							placeholder="Keywords, separated by comma. E.g. papa, ERP, Colaborative Tool"
						/>
					</div>
					<div className="grid grid-cols-4 items-center gap-4">
						<Label htmlFor="ogImage" className="text-right">
							Open Graph Image URL
						</Label>
						<Input
							id="ogImage"
							name="ogImage"
							defaultValue={seo?.ogImage ?? undefined}
							className="col-span-3"
							placeholder="https://example.com/image.webp"
						/>
					</div>
					<div className="grid grid-cols-4 items-center gap-4">
						<div className="col-start-2 inline-flex aspect-square h-16 w-16 items-center justify-center rounded-md border">
							{seo?.ogImage ? (
								<img
									src={seo.ogImage}
									alt={seo?.metaTitle || 'SEO Open Graph Image'}
									className="object-cover"
								/>
							) : (
								'⛰️'
							)}
						</div>
						{/* TODO: tabs to preview different image ratios */}
					</div>
				</Form>
				<DialogFooter>
					<Button form="seo-content" type="submit" disabled={isSubmitting}>
						{isSubmitting && <Loader2 className="animate-spin" />}
						{seo ? 'Save changes' : 'Create'}
					</Button>
				</DialogFooter>
			</DialogContent>
		</Dialog>
	)
}
